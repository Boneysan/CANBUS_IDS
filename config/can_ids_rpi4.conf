# CAN-IDS Raspberry Pi 4 Optimized Configuration
# System settings
log_level: INFO
interface: can0
bustype: socketcan

# Detection settings
rules_file: config/rules.yaml
ml_threshold: 0.75
detection_modes:
  - rule_based
  - ml_based

# Alert settings
alerts:
  log_file: logs/alerts.json
  console_output: true
  email_alerts: false
  rate_limit: 10
  
# Capture settings (optimized for Pi 4)
capture:
  buffer_size: 500        # Reduced for lower memory usage
  pcap_enabled: true
  pcap_directory: data/raw/
  pcap_rotation_size: 50MB  # Smaller rotation to reduce SD card wear

# ML settings
ml_model:
  path: data/models/anomaly_detector.pkl
  retrain_interval: 86400
  auto_update: false
  feature_cache_size: 100  # Limit feature cache for memory efficiency

# Performance settings (Pi 4 specific)
performance:
  max_cpu_percent: 70     # Conservative for thermal management
  max_memory_mb: 300      # Reduced for 2GB Pi 4 models
  processing_threads: 1   # Single thread to reduce heat
  enable_turbo_boost: false
  
# Pi 4 specific optimizations
raspberry_pi:
  enable_hardware_watchdog: true
  thermal_throttling_temp: 70  # Celsius
  log_rotation_size: 10MB
  use_tmpfs_logs: true